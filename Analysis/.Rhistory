mod_spec_chem3$VCV))
mod_spec_chem_VCV_conv
summary(mod_spec_chem)
dev.new()
dev.new()
plot(Sub_chem$logratio ~ Sub_chem$broadTreatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Chemical group",
pch = 16,
cex = 0,
names = c("Amitraz",
"Coumaphos",
"Formic acid",
"Oxalic acid",
"Pyrethroid",
"Thymol"))
#We can plot the points for Amitraz
points(Sub_chem[Sub_chem$broadTreatment == "Amitraz", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Amitraz",
"broadTreatment"]),
amount = 0.1),
pch = 16,
col = rgb(236, 143, 94, max=255),
cex = 0.4)
points(median(Sub_chem[Sub_chem$broadTreatment == "Amitraz", "logratio"])
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Coumaphos
points(Sub_chem[Sub_chem$broadTreatment == "Coumaphos", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Coumaphos",
"broadTreatment"]),amount = 0.1),
pch = 16,col = rgb(243, 182, 100, max=255),
cex = 0.5)
points(median(Sub_chem[Sub_chem$broadTreatment == "Coumaphos", "logratio"])
~ c(2),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Formic_acid
points(Sub_chem[Sub_chem$broadTreatment == "Formic_acid", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Formic_acid",
"broadTreatment"]),amount = 0.1),
pch = 16,
col = rgb(250, 200, 110, max=255),
cex = 0.5)
points(median(Sub_chem[Sub_chem$broadTreatment == "Formic_acid", "logratio"])
~ c(3),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Oxalic_acid
points(Sub_chem[Sub_chem$broadTreatment == "Oxalic_acid", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Oxalic_acid",
"broadTreatment"]),
amount = 0.1),
pch = 16,
col = rgb(255, 215, 120, max=255),
cex = 0.5)
points(median(Sub_chem[Sub_chem$broadTreatment == "Oxalic_acid", "logratio"])
~ c(4),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Pyrethroid
points(Sub_chem[Sub_chem$broadTreatment == "Pyrethroid", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Pyrethroid",
"broadTreatment"]),
amount = 0.1),
pch = 16,
col = rgb(255, 225, 130, max=255),
cex = 0.5)
points(median(Sub_chem[Sub_chem$broadTreatment == "Pyrethroid", "logratio"])
~ c(5),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Thymol
points(Sub_chem[Sub_chem$broadTreatment == "Thymol", "logratio"] ~
jitter(as.integer(Sub_chem[Sub_chem$broadTreatment == "Thymol",
"broadTreatment"]),
amount = 0.1),
pch = 16,
col = rgb(255, 235, 140, max=255),
cex = 0.5)
points(median(Sub_chem[Sub_chem$broadTreatment == "Thymol", "logratio"])
~ c(6),
pch = 16,
col = "black",
cex = 1.3)
Full_bio <-  Full_comb_data[Full_comb_data$categoryTreatment == "Biological",]
Full_bio$SubCategory1Treatment <- factor(Full_bio$SubCategory1Treatment)
nitt_b <- 2200000
thining_b <- 1000
burnin_b <- 200000
mod_Full_bio <- MCMCglmm(logratio ~ SubCategory1Treatment + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = Full_bio,
nitt = nitt_b,
thin = thining_b,
burnin = burnin_b,
verbose = FALSE
)
mod_Full_bio2 <- MCMCglmm(logratio ~ SubCategory1Treatment + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = Full_bio,
nitt = nitt_b,
thin = thining_b,
burnin = burnin_b,
verbose = FALSE
)
mod_Full_bio3 <- MCMCglmm(logratio ~ SubCategory1Treatment + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = Full_bio,
nitt = nitt_b,
thin = thining_b,
burnin = burnin_b,
verbose = FALSE
)
#Check the fixed terms
mod_Full_bio_Sol_conv <- gelman.diag(mcmc.list(mod_Full_bio$Sol,
mod_Full_bio2$Sol,
mod_Full_bio3$Sol))
mod_Full_bio_Sol_conv
#Check the random terms
mod_Full_bio_VCV_conv <- gelman.diag(mcmc.list(mod_Full_bio$VCV,
mod_Full_bio2$VCV,
mod_Full_bio3$VCV))
mod_Full_bio_VCV_conv
summary(mod_Full_bio)
dev.new()
dev.new()
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
#We can plot the points for Bee_breed
points(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"])
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Natural_enemies
points(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(30, 120, 170, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",
"logratio"]) ~ c(2),
pch = 16,
col = "black",
cex = 1.3)
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
dev.new()
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
dev.new()
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
points(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"])
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
points(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(30, 120, 170, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",
"logratio"]) ~ c(2),
pch = 16,
col = "black",
cex = 1.3)
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
#We can plot the points for Bee_breed
points(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"])
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Natural_enemies
points(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(30, 120, 170, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",
"logratio"]) ~ c(2),
pch = 16,
col = "black",
cex = 1.3)
plot(Full_bio$logratio ~ Full_bio$SubCategory1Treatment,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Bee breed", "Natural enemies"))
#We can plot the points for Bee_breed
points(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Bee_breed", "logratio"])
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Natural_enemies
points(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies", "logratio"] ~
jitter(as.integer(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",                                           "SubCategory1Treatment"]),
amount = 0.1),
pch = 16,
col = rgb(30, 120, 170, max=255),
cex = 0.8)
points(median(Full_bio[Full_bio$SubCategory1Treatment == "Natural_enemies",
"logratio"]) ~ c(2),
pch = 16,
col = "black",
cex = 1.3)
life_bees_data <- Full_bees_data[Full_bees_data$ResponseVariableTarget %in%
c("Honey_bee_worker",
"Honey_bee_juvenile"),]
life_bees_data <- life_bees_data[life_bees_data$chem_split %in%
c("Agriculturally_Organic",
"Synthetic",
"Biological"),]
life_bees_data$life_treat <- paste(life_bees_data$chem_split,
life_bees_data$ResponseVariableTarget,
sep = "_")
life_bees_data$life_treat <- factor(life_bees_data$life_treat,
levels = c("Synthetic_Honey_bee_worker",
"Synthetic_Honey_bee_juvenile",
"Agriculturally_Organic_Honey_bee_worker",
"Agriculturally_Organic_Honey_bee_juvenile",
"Biological_Honey_bee_worker",
"Biological_Honey_bee_juvenile"))
mod_bees_life <- MCMCglmm(logratio ~ life_treat + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = life_bees_data,
nitt = nitt,
thin = thining,
burnin = burnin,
prior = prior_d,
verbose = FALSE
)
mod_bees_life2 <- MCMCglmm(logratio ~ life_treat + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = life_bees_data,
nitt = nitt,
thin = thining,
burnin = burnin,
prior = prior_d,
verbose = FALSE
)
mod_bees_life3 <- MCMCglmm(logratio ~ life_treat + Context,
rcov=~units,
random =~StudyID_control
+ Continent
+ Cont_Country,
family ="gaussian",
data = life_bees_data,
nitt = nitt,
thin = thining,
burnin = burnin,
prior = prior_d,
verbose = FALSE
)
#Check the fixed terms
mod_bees_life_Sol_conv <- gelman.diag(mcmc.list(mod_bees_life$Sol,
mod_bees_life2$Sol,
mod_bees_life3$Sol))
mod_bees_life_Sol_conv
#Check the random terms
mod_bees_life_VCV_conv <- gelman.diag(mcmc.list(mod_bees_life$VCV,
mod_bees_life2$VCV,
mod_bees_life3$VCV))
mod_bees_life_VCV_conv
summary(mod_bees_life)
dev.new()
dev.new()
plot(life_bees_data$logratio ~ life_bees_data$life_treat,
col ="black",
bty = "n",
boxwex = 0.05,
ylab = "log ratio",
xlab = "Treatment type",
pch = 16,
cex = 0,
names = c("Synthetic adults",
"Synthetic juvenile",
"Agriculturally Organic worker",
"Agriculturally Organic juvenile",
"Biological adults",
"Biological juvenile"))
#We can plot the points for Synthetic_Honey_bee_worker
points(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_worker", "logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_worker",                                           "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(236, 143, 94, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_worker",
"logratio"])$mode
~ c(1),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Synthetic_Honey_bee_juvenile
points(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_juvenile",
"logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_juvenile", "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(236, 143, 94, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Synthetic_Honey_bee_juvenile",
"logratio"])$mode
~ c(2),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Agriculturally_Organic_Honey_bee_worker
points(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_worker",
"logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_worker", "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(243, 182, 100, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_worker",
"logratio"])$mode
~ c(3),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Agriculturally_Organic_Honey_bee_juvenile
points(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_juvenile",
"logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_juvenile", "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(243, 182, 100, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Agriculturally_Organic_Honey_bee_juvenile",
"logratio"])$mode
~ c(4),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Biological_Honey_bee_worker
points(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_worker",
"logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_worker", "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_worker",
"logratio"])$mode
~ c(5),
pch = 16,
col = "black",
cex = 1.3)
#We can plot the points for Biological_Honey_bee_juvenile
points(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_juvenile",
"logratio"] ~
jitter(as.integer(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_juvenile", "life_treat"]),
amount = 0.1),
pch = 16,
col = rgb(33, 156, 144, max=255),
cex = 0.8)
points(hdr(life_bees_data[life_bees_data$life_treat == "Biological_Honey_bee_juvenile",
"logratio"])$mode
~ c(6),
pch = 16,
col = "black",
cex = 1.3)
1312+60
c(1312+60)/12
c(1312)/12
c(1312+60)/12
1312/111.6
11.75627*100
1175.627/12
1175.627/12 + 5
iris
iris$Species
0.08 + 0.13
0.08 + 0.126
mod1 <- glm(Petal.width ~ Sepal.length + Species + Species:Sepal.length)
Petal.width ~ Sepal.length + Species + Species:Sepal.length
mod1 <- glm(iris$Petal.width ~ iris$Sepal.length + iris$Species + iris$Species:iris$Sepal.length)
iris
iris$Sepal.Length
mod1 <- glm(iris$Petal.Width ~ iris$Sepal.Length + iris$Species + iris$Species:iris$Sepal.Length)
mod1 <- glm(iris$Petal.Width ~ iris$Sepal.Length + iris$Species )
mod1 <- glm(iris$Petal.Width ~ iris$Sepal.Length + iris$Species + iris$Species:iris$Sepal.Length)
mod2 <- glm(iris$Petal.Width ~ iris$Sepal.Length + iris$Species )
mod3 <- glm(iris$Petal.Width ~ iris$Sepal.Length  )
mod1 <- glm(iris$Petal.Width ~ iris$Petal.Length + iris$Species + iris$Species:iris$Petal.Length)
mod2 <- glm(iris$Petal.Width ~ iris$Petal.Length + iris$Species)
mod3 <- glm(iris$Petal.Width ~ iris$Petal.Length)
aic(mod1)
AIC(mod1)
AIC(mod2)
AIC(mod3)
-85.39086 + 2
